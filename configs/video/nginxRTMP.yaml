apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-rtmp-config
  namespace: video
data:
  nginx.conf: |
    worker_processes auto;
    
    events {
      worker_connections 1024;
    }


    http {
      include mime.types;
      default_type application/octet-stream;
      
      server {
        listen 80;
        
        # Root directory listing
        location / {
          root /opt/data;
          autoindex on;
          autoindex_exact_size off;
          autoindex_format html;
          autoindex_localtime on;
        }
      }
        
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-rtmp
  namespace: video
  labels:
    dns.peak/domain: video.stream.peak
    dns.peak/loadbalance: configmap.loadbalance-expressions.video-service
    dns.peak/loadbalance-mode: excludeoverloaded
    dns.peak/overload-threshold: "1.5"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-rtmp
  template:
    metadata:
      labels:
        app: nginx-rtmp
    spec:
      containers:
      - name: nginx-rtmp
        image: tiangolo/nginx-rtmp
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2"
        ports:
        - containerPort: 1935
          name: rtmp
        - containerPort: 80
          name: http
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: video-storage
          mountPath: /opt/data
        securityContext:
          runAsUser: 0
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-rtmp-config
      - name: video-storage
        persistentVolumeClaim:
          claimName: nfs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-rtmp
  namespace: video
spec:
  type: LoadBalancer
  ports:
  - port: 1935
    targetPort: 1935
    name: rtmp
  - port: 80
    targetPort: 80
    name: http
  selector:
    app: nginx-rtmp