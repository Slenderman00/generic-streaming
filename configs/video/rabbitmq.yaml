apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
  namespace: video
data:
  enabled_plugins: |
    [rabbitmq_management,rabbitmq_peer_discovery_k8s].
  rabbitmq.conf: |
    cluster_formation.peer_discovery_backend = rabbit_peer_discovery_k8s
    cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
    cluster_formation.k8s.address_type = hostname
    cluster_formation.k8s.hostname_suffix = .rabbitmq-headless.video.svc.cluster.local
    cluster_partition_handling = autoheal
    cluster_formation.k8s.service_name = rabbitmq-headless
    queue_master_locator = min-masters
    disk_free_limit.absolute = 2GB
    log.file.level = info
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rabbitmq
  namespace: video
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: rabbitmq-peer-discovery
  namespace: video
rules:
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rabbitmq-peer-discovery
  namespace: video
subjects:
- kind: ServiceAccount
  name: rabbitmq
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rabbitmq-peer-discovery
---
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-secret
  namespace: video
type: Opaque
stringData:
  RABBITMQ_ERLANG_COOKIE: "unique-erlang-cookie-string-here"
  RABBITMQ_DEFAULT_USER: "user"
  RABBITMQ_DEFAULT_PASS: "password"
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: video
spec:
  selector:
    app: rabbitmq
  ports:
  - name: amqp
    port: 5672
    targetPort: 5672
  - name: management
    port: 15672
    targetPort: 15672
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-headless
  namespace: video
spec:
  clusterIP: None
  selector:
    app: rabbitmq
  ports:
  - name: epmd
    port: 4369
    targetPort: 4369
  - name: amqp
    port: 5672
    targetPort: 5672
  - name: management
    port: 15672
    targetPort: 15672
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: video
spec:
  serviceName: rabbitmq-headless
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      serviceAccountName: rabbitmq
      terminationGracePeriodSeconds: 10
      containers:
        - name: rabbitmq
          image: rabbitmq:3.12-management
          ports:
            - name: epmd
              containerPort: 4369
            - name: amqp
              containerPort: 5672
            - name: management
              containerPort: 15672
          env:
            - name: RABBITMQ_ERLANG_COOKIE
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_ERLANG_COOKIE
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_DEFAULT_USER
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_DEFAULT_PASS
            - name: RABBITMQ_USE_LONGNAME
              value: "true"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: RABBITMQ_NODENAME
              value: "rabbit@rabbitmq-0.rabbitmq-headless.video.svc.cluster.local"
          volumeMounts:
            - name: config-volume
              mountPath: /etc/rabbitmq/conf.d/10-defaults.conf
              subPath: rabbitmq.conf
            - name: config-volume
              mountPath: /etc/rabbitmq/enabled_plugins
              subPath: enabled_plugins
            - name: data
              mountPath: /var/lib/rabbitmq
          securityContext:
            runAsUser: 999
            runAsGroup: 999
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "200m"
      volumes:
        - name: config-volume
          configMap:
            name: rabbitmq-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi