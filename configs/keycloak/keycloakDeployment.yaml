apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: auth-service
  labels:
    app: keycloak
    dns.peak/domain: keycloak.auth.peak
    dns.peak/loadbalance: configmap.loadbalance-expressions.auth-service
    dns.peak/loadbalance-mode: excludeoverloaded
    dns.peak/overload-threshold: "1.5"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app: keycloak
    spec:
      volumes:
        - name: realm-config
          configMap:
            name: keycloak-realm-config
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:22.0
          args: ["start-dev", "--http-port=80", "--import-realm"]
          volumeMounts:
            - name: realm-config
              mountPath: /opt/keycloak/data/import
          env:
            - name: KC_DB
              value: postgres
            - name: KC_DB_URL
              value: jdbc:postgresql://postgres.auth-service.svc.cluster.local:5432/keycloak
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: keycloak-secrets
                  key: POSTGRES_USER
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-secrets
                  key: POSTGRES_PASSWORD
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  name: keycloak-secrets
                  key: KEYCLOAK_ADMIN
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-secrets
                  key: KEYCLOAK_PASSWORD
            - name: KEYCLOAK_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-secrets
                  key: CLIENT_ID
            - name: KEYCLOAK_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-secrets
                  key: CLIENT_SECRET
            - name: KEYCLOAK_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-secrets
                  key: JWT_SECRET
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: auth-service
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: keycloak
